{"ast":null,"code":"var _jsxFileName = \"/home/nik/projects/three-fiber-excercises/42-first-r3f-application/src/customObject.js\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport { useMemo } from \"react\";\nexport default function CustomObject() {\n  var verticesCount = 10 * 3;\n  var positions = useMemo(function () {\n    var positions = new Float32Array(verticesCount * 3);\n    for (var i = 0; i < verticesCount * 3; i++) positions[i] = (Math.random() - 0.5) * 3;\n    return positions;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: verticesCount,\n    itemSize: 3,\n    array: positions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: \"red\",\n    side: THREE.DoubleSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"names":["React","THREE","useMemo","CustomObject","verticesCount","positions","Float32Array","i","Math","random","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","attach","count","itemSize","array","color","side","DoubleSide"],"sources":["/home/nik/projects/three-fiber-excercises/42-first-r3f-application/src/customObject.js"],"sourcesContent":["import React from \"react\"\nimport * as THREE from \"three\"\nimport { useMemo } from \"react\"\n\nexport default function CustomObject () {\n\n    const verticesCount = 10 * 3\n  \n    const positions = useMemo(()=>{\n        \n        const positions = new Float32Array(verticesCount * 3)\n\n        for(let i = 0; i < verticesCount *3; i++)\n            positions[i] = (Math.random() - 0.5) * 3\n        \n        return positions\n    \n    }, [])\n\n    return <mesh>\n        <bufferGeometry>\n            <bufferAttribute \n            attach={\"attributes-position\"}\n            count={verticesCount}\n            itemSize={3}\n            array={ positions}\n            />\n        </bufferGeometry>\n        <meshBasicMaterial color={\"red\"} side={ THREE.DoubleSide} />\n    </mesh>\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,OAAO;AAE/B,eAAe,SAASC,YAAYA,CAAA,EAAI;EAEpC,IAAMC,aAAa,GAAG,EAAE,GAAG,CAAC;EAE5B,IAAMC,SAAS,GAAGH,OAAO,CAAC,YAAI;IAE1B,IAAMG,SAAS,GAAG,IAAIC,YAAY,CAACF,aAAa,GAAG,CAAC,CAAC;IAErD,KAAI,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,GAAE,CAAC,EAAEG,CAAC,EAAE,EACpCF,SAAS,CAACE,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;IAE5C,OAAOJ,SAAS;EAEpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOL,KAAA,CAAAU,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACHhB,KAAA,CAAAU,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIhB,KAAA,CAAAU,aAAA;IACAO,MAAM,EAAE,qBAAsB;IAC9BC,KAAK,EAAEd,aAAc;IACrBe,QAAQ,EAAE,CAAE;IACZC,KAAK,EAAGf,SAAU;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjB,CACW,CAAC,eACjBhB,KAAA,CAAAU,aAAA;IAAmBW,KAAK,EAAE,KAAM;IAACC,IAAI,EAAGrB,KAAK,CAACsB,UAAW;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzD,CAAC;AACX"},"metadata":{},"sourceType":"module"}